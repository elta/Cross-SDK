#! /bin/bash

source source.env

[ -d "${SRCMIPSELKERNEL}" ] || mkdir -p "${SRCMIPSELKERNEL}"
[ -d "${METADATAMIPSELKERNEL}" ] || mkdir -p "${METADATAMIPSELKERNEL}"
[ -d "${METADATAEXTRACT}" ] || mkdir -p "${METADATAEXTRACT}"
[ -d "${PREFIXGNULINUX}" ] || mkdir -p "${PREFIXGNULINUX}"

mkdir -p ${PREFIXMIPSELROOTFS}
mkdir -p ${PREFIXMIPSELROOTFS}/boot

export PATH=${PREFIXHOSTTOOLS}/bin:${PREFIXMIPSELTOOLCHAIN}/bin:$PATH

pushd ${SRCMIPSELKERNEL}
[ -f ${METADATAEXTRACT}/linux_extract ] || \
  tar xf ${TARBALL}/linux-${LINUX_VERSION}.${LINUX_SUFFIX} || \
    die "***extract linux error" && \
      touch ${METADATAEXTRACT}/linux_extract
popd

pushd ${SRCMIPSELKERNEL}
cd linux-${LINUX_VERSION}
[ -f ${METADATAMIPSELKERNEL}/linux_cross_mrpro ] || \
  make mrproper || \
    die "clean cross linux error" && \
      touch ${METADATAMIPSELKERNEL}/linux_cross_mrpro
if [ ${HOSTOS} = "Darwin" ]; then
[ -f ${METADATAEXTRACT}/linux_mac_patch ] || \
  patch -p1 < ${PATCH}/linux-${LINUX_VERSION}-mips-macos.patch || \
    die "***Patch linux mac config error" && \
      touch ${METADATAEXTRACT}/linux_mac_patch
[ -f ${METADATAEXTRACT}/linux_mac2_patch ] || \
  patch -p1 < ${PATCH}/linux-${LINUX_VERSION}-mips-macos-2.patch || \
    die "***Patch linux mac2 config error" && \
      touch ${METADATAEXTRACT}/linux_mac2_patch
fi
[ -f ${METADATAMIPSELKERNEL}/linux_config_patch ] || \
  patch -p1 < ${PATCH}/linux-mipsel-sysroot-defconfig.patch || \
    die "***Patch linux config error" && \
      touch ${METADATAMIPSELKERNEL}/linux_config_patch
[ -f ${METADATAMIPSELKERNEL}/linux_defconfig ] || \
  make ARCH=mips mipsel_sysroot_defconfig || \
    die "***Patch linux config error" && \
      touch ${METADATAMIPSELKERNEL}/linux_defconfig
[ -f ${METADATAMIPSELKERNEL}/linux_cross_build ] || \
  make -j${JOBS} ARCH=mips CROSS_COMPILE=${CROSS_TARGET32}- || \
    die "build cross linux error" && \
      touch ${METADATAMIPSELKERNEL}/linux_cross_build
echo ${MOD}
if [ ${MOD} = "gnu-rootfs" ]; then
[ -f ${METADATAMIPSELKERNEL}/linux_mod_rootfs_install ] || \
  make ARCH=mips CROSS_COMPILE=${CROSS_TARGET32}- \
  INSTALL_MOD_PATH=${PREFIXMIPSELROOTFS} modules_install || \
    die "install rootfs linux module error" && \
      touch ${METADATAMIPSELKERNEL}/linux_mod_rootfs_install
elif [ ${MOD} = "busybox" ]; then
[ -f ${METADATAMIPSELKERNEL}/linux_mod_busybox_install ] || \
  make ARCH=mips CROSS_COMPILE=${CROSS_TARGET32}- \
  INSTALL_MOD_PATH=${PREFIXMIPSELBUSYBOX} modules_install || \
    die "install busybox linux module error" && \
      touch ${METADATAMIPSELKERNEL}/linux_mod_busybox_install
else
  echo "no mods installed"
fi
[ -f ${METADATAMIPSELKERNEL}/linux_cross_cpvmlinux ] || \
  cp vmlinux ${PREFIXGNULINUX}/vmlinux-o32 || \
    die "cp vmlinux error" && \
      touch ${METADATAMIPSELKERNEL}/linux_cross_cpvmlinux
[ -f ${METADATAMIPSELKERNEL}/linux_cross_cpsystemmap ] || \
  cp System.map ${PREFIXMIPSELROOTFS}/boot/System.map-${LINUX_VERSION} || \
    die "cp System.map error" && \
      touch ${METADATAMIPSELKERNEL}/linux_cross_cpsystemmap
[ -f ${METADATAMIPSELKERNEL}/linux_cross_cpconfig ] || \
  cp .config ${PREFIXMIPSELROOTFS}/boot/config-${LINUX_VERSION} || \
    die "***cp config file error" && \
      touch ${METADATAMIPSELKERNEL}/linux_cross_cpconfig
popd

touch ${METADATAMIPSELKERNEL}/linux_kernel_finished
