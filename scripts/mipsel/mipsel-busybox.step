#! /bin/bash

export PATH=${PREFIXHOSTTOOLS}/bin:${PREFIXMIPSELTOOLCHAIN}/bin:${PATH}

export CC=${CROSS_TARGET32}-gcc
export CFLAGS="-isystem ${PREFIXMIPSELROOTFS}/usr/include"
export CXX=${CROSS_TARGET32}-g++
export CXXFLAGS="-isystem ${PREFIXMIPSELROOTFS}/usr/include"
export LDFLAGS="-Wl,-rpath-link,${PREFIXMIPSELROOTFS}/usr/lib:${PREFIXMIPSELROOTFS}/lib"

[ -d "${SRCBUSYBOX_32}" ] || mkdir -p "${SRCBUSYBOX_32}"
[ -d "${BUILDBUSYBOX_32}" ] || mkdir -p "${BUILDBUSYBOX_32}"
[ -d "${METADATABUSYBOX_32}" ] || mkdir -p "${METADATABUSYBOX_32}"
[ -d "${PREFIXMIPSELBUSYBOX}" ] || mkdir -p "${PREFIXMIPSELBUSYBOX}"

[ -f ${PREFIXMIPSELTOOLCHAIN}/bin/${CC} ] || die "No toolchain found, process error"

#export BUSYBOX_OPTIONS="static dynamic"
export BUSYBOX_OPTIONS="dynamic"

pushd ${SRCBUSYBOX_32}
[ -f ${METADATAEXTRACT}/busybox-extract ] || \
  tar xf ${TARBALL}/busybox-${BUSYBOX_VERSION}.${BUSYBOX_SUFFIX} || \
    die "busybox extract error" && \
      touch ${METADATAEXTRACT}/busybox-extract
[ -f "${METADATAEXTRACT}/bash_completion_extract" ] || \
  tar xf ${TARBALL}/bash-completion-${BASHCOMPLETION_VERSION}.${BASHCOMPLETION_SUFFIX} || \
    die "extract bash-completion error" && \
      touch ${METADATAEXTRACT}/bash_completion_extract
popd

# Begin for loop, build static/dynamic busybox.
for option in ${BUSYBOX_OPTIONS}; do

[ -f ${METADATABUSYBOX_32}/busybox-${option}-create ] || \
  mkdir ${BUILDBUSYBOX_32}/busybox-$option || \
    die "busybox-${option}-create dir create failed" && \
      touch ${METADATABUSYBOX_32}/busybox-${option}-create

pushd ${SRCBUSYBOX_32}/busybox-${BUSYBOX_VERSION}
if [ ${HOSTOS} = "Darwin" ]; then
[ -f ${METADATAEXTRACT}/busybox-1.20.2-macos.patch ] || \
  patch -Np1 -i ${PATCH}/busybox-${BUSYBOX_VERSION}-macos.patch || \
    die "Patch for MacOS failed" && \
      touch ${METADATAEXTRACT}/busybox-1.20.2-macos.patch
fi
[ -f ${METADATAEXTRACT}/busybox-${option}-patch-busybox-${BUSYBOX_VERSION} ] || \
  patch -Np1 -i ${PATCH}/busybox-${BUSYBOX_VERSION}.patch || \
    die "Patch failed" && \
      touch ${METADATAEXTRACT}/busybox-${option}-patch-busybox-${BUSYBOX_VERSION}
[ -f ${METADATABUSYBOX_32}/busybox-${option}-patch-busybox-mipsel-${option}_defconfig ] || \
  patch -Np1 -i ${PATCH}/busybox-mipsel-${option}_defconfig.patch \
    || die "Patch failed" && \
      touch ${METADATABUSYBOX_32}/busybox-${option}-patch-busybox-mipsel-${option}_defconfig
[ -f ${METADATABUSYBOX_32}/busybox-${option}-config ] || \
  make mipsel-${option}_defconfig || \
    die "busybox-${option}-config error" && \
      touch ${METADATABUSYBOX_32}/busybox-${option}-config
[ -f ${METADATABUSYBOX_32}/busybox-${option}-build ] || \
  make -j${JOBS} ARCH=mips CROSS_COMPILE=${CROSS_TARGET32}- || \
    die "busybox-${option}-build error" && \
      touch ${METADATABUSYBOX_32}/busybox-${option}-build
[ -f ${METADATABUSYBOX_32}/busybox-${option}-install ] || \
  make ARCH=mips CROSS_COMPILE=${CROSS_TARGET32}- install || \
    die "busybox-${option}-install error" && \
      touch ${METADATABUSYBOX_32}/busybox-${option}-install
[ -f ${METADATABUSYBOX_32}/copy-busybox-${option} ] || \
  cp -a _install/* ${PREFIXMIPSELBUSYBOX} || \
    die "copy busybox-${option} error" && \
      touch ${METADATABUSYBOX_32}/copy-busybox-${option}
[ -f ${METADATABUSYBOX_32}/busybox-clean ] || \
  make distclean || \
    die "clean busybox error" && \
      touch ${METADATABUSYBOX_32}/busybox-clean
popd

cp -ar ${SRCBUSYBOX_32}/busybox-${BUSYBOX_VERSION}/examples/bootfloppy/etc ${PREFIXMIPSELBUSYBOX}/

pushd ${BUILDBUSYBOX_32}
[ -d "bash-completion-build" ] || mkdir bash-completion-build
cd bash-completion-build
[ -f "${METADATABUSYBOX_32}/bash_completion_cross_config" ] || \
  ${SRCBUSYBOX_32}/bash-completion-${BASHCOMPLETION_VERSION}/configure || \
    die "***config bash-completion error" && \
      touch ${METADATABUSYBOX_32}/bash_completion_cross_config
[ -f "${METADATABUSYBOX_32}/bash_completion_cross_build" ] || \
  make -j${JOBS} || \
    die "***build bash-completion error" && \
      touch ${METADATABUSYBOX_32}/bash_completion_cross_build
[ -f "${METADATABUSYBOX_32}/bash_completion_cross_install" ] || \
  make DESTDIR=${PREFIXMIPSELBUSYBOX} install || \
    die "***install bash-completion error" && \
      touch ${METADATABUSYBOX_32}/bash_completion_cross_install
popd

[ -f ${METADATABUSYBOX_32}/add_param_to_bash_completion ] || \
  echo ". /usr/local/share/bash-completion/bash_completion" >> ${PREFIXMIPSELBUSYBOX}/etc/bash_completion || \
    die "***create /etc/bash_completion error"
      touch ${METADATABUSYBOX_32}/add_param_to_bash_completion

mkdir ${PREFIXMIPSELBUSYBOX}/dev
mkdir ${PREFIXMIPSELBUSYBOX}/proc

if [ ${HOSTOS} != "Darwin" ]; then
sudo cp -a /dev/zero ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/console ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/null ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/tty ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/tty1 ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/tty2 ${PREFIXMIPSELBUSYBOX}/dev/
sudo cp -a /dev/ttyS0 ${PREFIXMIPSELBUSYBOX}/dev/
fi

# Copy Library to File System
if [ -d ${PREFIXMIPSELROOTFS}/lib ]; then
    cp -ar ${PREFIXMIPSELROOTFS}/lib ${PREFIXMIPSELBUSYBOX}/
fi

[ -f ${METADATAEXTRACT}/busybox_write_rcS ] || \
  echo "/bin/mount -o remount,rw /" >> ${PREFIXMIPSELBUSYBOX}/etc/init.d/rcS || \
    die "busybox write rcS error" && \
      touch ${METADATAEXTRACT}/busybox_write_rcS

touch ${METADATABUSYBOX_32}/mipsel_busybox_finished

done
